snippet makeFixPoint
options head
    template <class Func>
    class FixPoint : Func {
    public:
        explicit constexpr FixPoint(Func&& f) noexcept : Func(forward<Func>(f)) {}

        template <class... Args>
        constexpr decltype(auto) operator()(Args&&... args) const {
            return Func::operator()(*this, std::forward<Args>(args)...);
        }
    };

    template <class Func>
    static inline constexpr decltype(auto) makeFixPoint(Func&& f) noexcept {
        return FixPoint<Func> {forward<Func>(f)};
    }