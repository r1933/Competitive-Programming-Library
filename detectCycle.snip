snippet detect_cycle
options head
    // detect_cycle {{{
    template <class T, class Fn, class Eq>
    pair<intmax_t, intmax_t> detect_cycle(const T& s, const Fn& fn, const Eq& eq) {
        T tortoise = s;
        T hare = s;
        do {
            tortoise = fn(tortoise);
            hare = fn(fn(hare));
        } while (!eq(tortoise, hare));

        tortoise = s;
        intmax_t mu = 0;
        while (!eq(tortoise, hare)) {
            ++mu;
            tortoise = fn(tortoise);
            hare = fn(hare);
        }

        intmax_t lambda = 0;
        do {
            ++lambda;
            hare = fn(hare);
        } while (!eq(hare, tortoise));

        return {mu, lambda};
    }
    // }}}
